# Suggested Course name: Good Computational Practices for Data Science

# New Course for Health Data Science: PM566 Introduction to Health Data Science (Fall semester)

# Essential topics/syllabus:

*  Weeks 1-3: Intro to programing using R with R studio, Using R Projects - use 'how to simulate pi' as an example to work through. What key R tools/commands should we teach? Introduce data structures.

*  Week 4: Version Control & Reproducible Research. Github - general principles and using it with Rstudio (code back-ups, collaborative programming).

*  Week 5: R markdown - how to use it and write up reports with it.

*  Week 6: Good Coding style  - use the Tidyverse principles.

*  Week 7-8: Data handling, visualization and cleaning: Introduction to Tidyverse, dplyr, ggplot.

*  Week 9: Project review week - time for them to review projects they are working on and get feedback.

*  Week 10: Debugging and profiling - using Rstudio tools.

*  Week 11: Efficient Computing - Parallel processing using 'parallel' and 'future packages', and general principles, e.g. using 'apply'.

*  Week 12: High-performance computing -  R's sluRm package, use of USC's HPCC, cloud computing.

*  Week 13: Building web apps - Shiny.

*  Week 14: Collaborative research - Get further into Git; create a personal portfolio website using Git and blogdown? Create pull requests and contribute to the tidyverse package? 

*  Week 15: Overview of additional resources available - Dropbox? Overleaf? Slack? Hadoop Spark, dbPlyr, Tensorflow. Maybe a separate week on Big Data? Make aware of SQL?

# Existing PM 566 syllabus with lectures and labs integrated:

* Week 1 Lecture: Introduction to Data Science tools: R, R Markdown, (Python) 
  * Week 1 Lab: Getting set up with R Studio; using R Markdown
  
* Week 2 Lecture: Version Control & Reproducible Research
  * Week 2 Lab: Getting set up with Git; command line tools; integrating Git in RStudio
  
* Week 3 Lecture: Exploratory data analysis 
  * Week 3 Lab: Good coding style; the principles of Tidyverse; Tidyverse for EDA (dplyr)
  
* Week 4 Lecture: Data visualization
  * Week 4 Lab: Using ggplot2
  
* Week 5 Lecture: Data cleaning and wrangling
  * Week 5 Lab: 

* Week 6 Lecture: Data scraping, using APIs, data security
  * Week 6 Lab: Connecting to APIs, downloading data from APIs

* Week 7 Lecture: Efficient computing: debugging, profiling, parallelization
  * Week 7 Lab: RStudio tools for profiling, mastering R apply, local parallelization with doParallel
 
* Week 8 Lecture: High performance computing, cloud computing
  * Week 8 Lab: R sluRm package, use of USC HPCC, AWS/Google Cloud

* Week 9 Lecture: Midterm Exam

* Week 10 Lecture: Interactive visualization and data communication I
  * Week 10 Lab: Building a basic Shiny app

* Week 11 Lecture: Final project workshop: review project progress, preliminary presentations

* Week 12 Lecture: Interactive visualization and data communication II
  * Week 12 Lab: Building github.io website

* Week 13 Lecture: Text mining




# Exam week: Final project presentations.

# Key-point: 
Organize it by topic, and then introduce the specific tool that implements that topic. That way, when the tool goes out of date we can just plug in the new tool for the sae topic.

# Possible additional topics:

*  Intro to Python? (Ideally this should be taught in its own course)

*  R package creation?

*  Object-oriented programming?

*  Missing data / imputation? (best handled as a new topic in the existing PM520 Stats Computing, since these methods are statistical in nature?)


# General notes: The course should be lab-based (60-90 minutes of teaching + 90-120 minutes of lab each week).

Build the course around applications/projects - what projects should we use? (Bearing in mind they may know little stats coming into the course.)

*  Start with solo project - simulating pi.

*  Then do a collaborative project.

*  And then more projects.

*  Finish with a project for exam week. (e.g. produce a Shiny app.?)

*  This will also involve a minor re-write of the existing PM520 course, freeing up a small amount of time there that covered ideas that will now be covered in this new course.


# Possible Course texts:

* Introduction to Data Science, by R. Irizarry (https://rafalab.github.io/dsbook/)


# What Resources (books? etc.) should the course use?

*  http://happygitwithr.com/     (Using git with RStudio)

*  https://whattheyforgot.org/   (What they forgot to teach you about R)

*  https://swcarpentry.github.io/good-enough-practices-in-scientific-computing/

*  https://github.com/rstudio/rstudio-conf  (RStudio conference workshop repo on GitHub)

*  The Art of R programming (actual book! https://www.amazon.com/Art-Programming-Statistical-Software-Design/dp/1593273843/ref=sr_1_4?keywords=The+Art+of+R+programming&qid=1553794474&s=gateway&sr=8-4)

* Advanced R - Hadley Wickham (https://adv-r.hadley.nz/)

*  R for Data science - Hadley Wickham (https://r4ds.had.co.nz/)

* Other RStudio resources?




